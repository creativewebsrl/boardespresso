"use strict";

var mongoose = require('mongoose'),
    Schema = mongoose.Schema,
    conn;

//############
//### User ###
//############

var User = new Schema({
    // other elements will be inserted via mongoose-auth
    // we're getting for sure
    //   email,name{first,last},active
    // evenctually
    //   password
},{ strict: true });

User.pre('save', function (next) {
  // if (!this._id) email(this.email, 'Your record has changed');
  next();
});

var UserModel = null; // must wait for dashboard-auth to add types

//### END ###

module.exports = {
    init : function(conf){
        conn = mongoose.connect(conf.host,conf.databaseName,conf.port);
        return conn;
    },
    conn : function(){
        return conn;
    },
    model: function(modelName) {
        return mongoose.model(modelName);
    },
    ObjectId : function(key){
        try {
            return mongoose.Types.ObjectId(key);
        } catch (e) {
            return null;
        }
    },
    getUserSchema : function() {
        return User;
    },
    createUserModel : function(){
        // create the user model using the most up to date User schema available
        UserModel = mongoose.model('User',User);
        return UserModel;
    }
};